/**
 * This class serves as a base for the CPU Scheduling algorithms.
 * This class is abstract as the separate algorithm classes will override
 * its methods with their own versions.
 * 
 * @see cs450Assignment1.RRQueue
 * @see cs450Assignment1.FCFSQueue
 */
package cs450assignment1;

import java.util.Random;

/**
 * @date 11/25/2017
 * @author Paul Canada (https://github.com/PaulCanada)
 */
public abstract class ProcessQueue
{

    /**
     * This method will handle setting up the algorithms for the 
     * specific algorithm classes.
     * @see cs450Assignment1.FCFSQueue
     * @see cs450Assignment1.RRQueue
     */
    abstract void setupAlgorithm();

    /**
     * This method will handle calculating the total wait time of all Process
     * objects for each algorithm.
     * 
     * @return The total amount of time each Process waited until completion.
     */
    abstract int calculateTotalWaitTime();

    /**
     * This method will handle calculating the average wait time of all Process
     * objects for each algorithm.
     * 
     * @return The average amount of time each Process waited until completion.
     */
    abstract float calculateAverageWaitTime();

    /**
     * This method will handle passing over output text generated by each algorithm
     * to the GUI form.
     * 
     * @return The concatenated string of all output for algorithm.
     */
    abstract String getOutputText();
    
    /**
     * This method will return the number of Process objects that were utilized.
     * 
     * @return The number of Process objects used.
     */
    abstract int getNumberOfProcesses();

    /**
     * This method will return the type of algorithm used.
     * 
     * @return The type of algorithm used.
     */
    public String getType()
    {
        return type;
    }

    // Class attributes.
    protected String type;
    protected int numberOfProcesses;
    protected Random random;

}
